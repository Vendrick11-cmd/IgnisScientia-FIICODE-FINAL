[gd_scene load_steps=15 format=2]

[ext_resource path="res://Shaders/Light.tscn" type="PackedScene" id=1]
[ext_resource path="res://Levels/LevelAssets/Plants/Plants pack/Plants pack/Sprouts/With berries/4off.png" type="Texture" id=2]
[ext_resource path="res://Levels/LevelHollowgrove/EnvirSprites/Plants/Bilberry/BilberryBush.gd" type="Script" id=3]
[ext_resource path="res://Levels/LevelAssets/Plants/Plants pack/Plants pack/Sprouts/With berries/4.png" type="Texture" id=4]
[ext_resource path="res://Misc/Overlap/InteractRay.tscn" type="PackedScene" id=5]
[ext_resource path="res://Sounds/Levels/HollowGrove/PickPlant1.mp3" type="AudioStream" id=6]
[ext_resource path="res://Sounds/Levels/HollowGrove/PickPlant2.mp3" type="AudioStream" id=7]
[ext_resource path="res://Sounds/Levels/HollowGrove/PickPlant3.mp3" type="AudioStream" id=8]

[sub_resource type="Shader" id=1110]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=1111]
shader = SubResource( 1110 )
shader_param/speed = 1.0
shader_param/minStrength = 0.046
shader_param/maxStrength = 0.01
shader_param/strengthScale = 14.114
shader_param/interval = 0.571
shader_param/detail = 1.0
shader_param/distortion = null
shader_param/heightOffset = null
shader_param/offset = 0.0

[sub_resource type="Animation" id=1]
resource_name = "Idle"
tracks/0/type = "value"
tracks/0/path = NodePath("1:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 4 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Light2D:enabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=2]
resource_name = "Picked"
tracks/0/type = "value"
tracks/0/path = NodePath("1:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Light2D:enabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 11.3438, 9.85956 )

[sub_resource type="CircleShape2D" id=4]

[node name="BilberryBush" type="StaticBody2D"]
script = ExtResource( 3 )

[node name="1" type="Sprite" parent="."]
material = SubResource( 1111 )
position = Vector2( 0.0725479, 0.0618191 )
texture = ExtResource( 4 )

[node name="Light2D" parent="." instance=ExtResource( 1 )]
position = Vector2( -0.115294, 0.269883 )
texture_scale = 0.5
color = Color( 0.301961, 0.286275, 0.67451, 1 )
shadow_enabled = false
shadow_buffer_size = 256

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
reset_on_save = false
anims/Idle = SubResource( 1 )
anims/Picked = SubResource( 2 )

[node name="Timer" type="Timer" parent="."]
wait_time = 600.0
one_shot = true

[node name="InteractRay" parent="." instance=ExtResource( 5 )]
position = Vector2( 9.41447, -2.70848 )

[node name="PickUpArea" type="Area2D" parent="."]
visible = false
collision_layer = 1024
monitorable = false

[node name="CollisionPolygon2D" type="CollisionShape2D" parent="PickUpArea"]
position = Vector2( -0.243161, 1.70146 )
shape = SubResource( 3 )

[node name="PickUp" type="AudioStreamPlayer2D" parent="."]
position = Vector2( -0.625, -2.1875 )
stream = ExtResource( 6 )
volume_db = 10.0
bus = "SFX"

[node name="PickUp2" type="AudioStreamPlayer2D" parent="."]
position = Vector2( -0.625, -2.1875 )
stream = ExtResource( 7 )
volume_db = 10.0
bus = "SFX"

[node name="PickUp3" type="AudioStreamPlayer2D" parent="."]
position = Vector2( -0.625, -2.1875 )
stream = ExtResource( 8 )
volume_db = 10.0
bus = "SFX"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )
disabled = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
